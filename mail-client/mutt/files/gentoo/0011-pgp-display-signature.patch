# HG changeset patch
# User Richard Russon <rich@flatcap.org>
# Date 1464577017 -3600
#      Mon May 30 03:56:57 2016 +0100
# Branch gentoo-1.7
# Node ID d670e2268ca3224657b652ac2d401ed43abf1e00
# Parent  6858757af8970db378c61afb07ea8e42e85bf7b2
[PATCH 11/11] pgp-display-signature
From a4c534f6dc05711bdc54997c2c10f5b78302050b Mon Sep 17 00:00:00 2001
pgp/smime: allow {pgp,smime}_decode_command output to be hidden

The pgp_display_signature boolean option controls whether the sometimes
very verbose output of {pgp,smime}_decode_command should be displayed.
Since it can clutter up the display a lot, leaving little to no space at
all to display the actual email contents, people might want to hide the
output and just rely on the status bar message reporting valid or
invalid.
---
 PATCHES |  1 +
 init.h  |  8 ++++++++
 mutt.h  |  1 +
 pgp.c   | 26 +++++++++++++++++---------
 smime.c | 11 +++++++----
 5 files changed, 34 insertions(+), 13 deletions(-)

diff -r 6858757af897 -r d670e2268ca3 init.h
--- a/init.h	Mon May 30 03:56:38 2016 +0100
+++ b/init.h	Mon May 30 03:56:57 2016 +0100
@@ -2387,6 +2387,14 @@ struct option_t MuttVars[] = {
   ** possible \fCprintf(3)\fP-like sequences.
   ** (PGP only)
   */
+  { "pgp_display_signature",  DT_BOOL, R_NONE, OPTPGPDISPLSIG, 1},
+  /*
+  ** .pp
+  ** If \fIset\fP, mutt will display the pgp_decode_command and
+  ** smime_decode_command outputs.
+  ** Defaults to true.
+  ** (PGP/SMIME only)
+  */ 
   { "pipe_decode",	DT_BOOL, R_NONE, OPTPIPEDECODE, 0 },
   /*
   ** .pp
diff -r 6858757af897 -r d670e2268ca3 mutt.h
--- a/mutt.h	Mon May 30 03:56:38 2016 +0100
+++ b/mutt.h	Mon May 30 03:56:57 2016 +0100
@@ -559,6 +559,7 @@ enum
   OPTPGPSHOWUNUSABLE,
   OPTPGPAUTOINLINE,
   OPTPGPREPLYINLINE,
+  OPTPGPDISPLSIG,
 
   /* news options */
 
diff -r 6858757af897 -r d670e2268ca3 pgp.c
--- a/pgp.c	Mon May 30 03:56:38 2016 +0100
+++ b/pgp.c	Mon May 30 03:56:57 2016 +0100
@@ -209,15 +209,18 @@ static int pgp_copy_checksig (FILE *fpin
       
       if (strncmp (line, "[GNUPG:] ", 9) == 0)
 	continue;
-      fputs (line, fpout);
-      fputc ('\n', fpout);
+      if (option (OPTPGPDISPLSIG)) {
+	fputs (line, fpout);
+	fputc ('\n', fpout);
+      }
     }
     FREE (&line);
   }
   else
   {
     dprint (2, (debugfile, "pgp_copy_checksig: No pattern.\n"));
-    mutt_copy_stream (fpin, fpout);
+    if (option (OPTPGPDISPLSIG))
+      mutt_copy_stream (fpin, fpout);
     rv = 1;
   }
 
@@ -462,7 +465,8 @@ int pgp_application_pgp_handler (BODY *m
 
 	  if (s->flags & MUTT_DISPLAY)
 	  {
-	    crypt_current_time (s, "PGP");
+	    if (option (OPTPGPDISPLSIG))
+	      crypt_current_time (s, "PGP");
 	    rc = pgp_copy_checksig (pgperr, s->fpout);
 	  }
 	  
@@ -480,7 +484,8 @@ int pgp_application_pgp_handler (BODY *m
 	     */
 	    if (rc == -1 || rv) maybe_goodsig = 0;
 	    
-	    state_attach_puts (_("[-- End of PGP output --]\n\n"), s);
+	    if (option (OPTPGPDISPLSIG))
+	      state_attach_puts (_("[-- End of PGP output --]\n\n"), s);
 	  }
 	  if (pgp_use_gpg_agent())
 	    mutt_need_hard_redraw ();
@@ -724,7 +729,8 @@ int pgp_verify_one (BODY *sigbdy, STATE 
     return -1;
   }
   
-  crypt_current_time (s, "PGP");
+  if (option (OPTPGPDISPLSIG))
+    crypt_current_time (s, "PGP");
   
   if((thepid = pgp_invoke_verify (NULL, &pgpout, NULL, 
 				   -1, -1, fileno(pgperr),
@@ -749,7 +755,8 @@ int pgp_verify_one (BODY *sigbdy, STATE 
 
   safe_fclose (&pgperr);
 
-  state_attach_puts (_("[-- End of PGP output --]\n\n"), s);
+  if (option (OPTPGPDISPLSIG))
+    state_attach_puts (_("[-- End of PGP output --]\n\n"), s);
 
   mutt_unlink (sigfile);
   mutt_unlink (pgperrfile);
@@ -961,7 +968,8 @@ BODY *pgp_decrypt_part (BODY *a, STATE *
       p->goodsig = 1;
     else
       p->goodsig = 0;
-    state_attach_puts (_("[-- End of PGP output --]\n\n"), s);
+    if (option (OPTPGPDISPLSIG))
+      state_attach_puts (_("[-- End of PGP output --]\n\n"), s);
   }
   safe_fclose (&pgperr);
 
@@ -1092,7 +1100,7 @@ int pgp_encrypted_handler (BODY *a, STAT
     return -1;
   }
 
-  if (s->flags & MUTT_DISPLAY) crypt_current_time (s, "PGP");
+  if (s->flags & MUTT_DISPLAY && option (OPTPGPDISPLSIG)) crypt_current_time (s, "PGP");
 
   if ((tattach = pgp_decrypt_part (a, s, fpout, a)) != NULL)
   {
diff -r 6858757af897 -r d670e2268ca3 smime.c
--- a/smime.c	Mon May 30 03:56:38 2016 +0100
+++ b/smime.c	Mon May 30 03:56:57 2016 +0100
@@ -1756,7 +1756,8 @@ int smime_verify_one (BODY *sigbdy, STAT
     return -1;
   }
   
-  crypt_current_time (s, "OpenSSL");
+  if (option (OPTPGPDISPLSIG))
+    crypt_current_time (s, "OpenSSL");
   
   if ((thepid = smime_invoke_verify (NULL, &smimeout, NULL, 
 				   -1, -1, fileno (smimeerr),
@@ -1786,10 +1787,12 @@ int smime_verify_one (BODY *sigbdy, STAT
   
   fflush (smimeerr);
   rewind (smimeerr);
-  mutt_copy_stream (smimeerr, s->fpout);
+  if (option (OPTPGPDISPLSIG))
+    mutt_copy_stream (smimeerr, s->fpout);
   safe_fclose (&smimeerr);
     
-  state_attach_puts (_("[-- End of OpenSSL output --]\n\n"), s);
+  if (option (OPTPGPDISPLSIG))
+    state_attach_puts (_("[-- End of OpenSSL output --]\n\n"), s);
   
   mutt_unlink (signedfile);
   mutt_unlink (smimeerrfile);
@@ -1906,7 +1909,7 @@ static BODY *smime_handle_entity (BODY *
     fflush (smimeerr);
     rewind (smimeerr);
     
-    if ((c = fgetc (smimeerr)) != EOF)
+    if ((c = fgetc (smimeerr)) != EOF && option (OPTPGPDISPLSIG))
     {
       ungetc (c, smimeerr);
       
