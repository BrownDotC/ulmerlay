# HG changeset patch
# User Richard Russon <rich@flatcap.org>
# Date 1464576157 -3600
#      Mon May 30 03:42:37 2016 +0100
# Branch gentoo-1.7
# Node ID 1e2ed7ef1f7719f6df5ab93b9e192461fa3f7a41
# Parent  d5efd0da7718cefeb16b66d4fe5a11858df93507
[PATCH 03/11] dont-reveal-bbc
From fd2053e53f1e800ce5907fd67b108713938d2a58 Mon Sep 17 00:00:00 2001
# User Fabian Groffen <grobian@gentoo.org>
# Date 1279823714 -7200
# Parent  b4384f634a994a0b9cfc0df036731396909ce850

http://bugs.debian.org/cgi-bin/bugreport.cgi?msg=28;filename=write_bcc.patch.1.
5.20-2;att=1;bug=467432

originally adapted for Gentoo patchsets, in NeoMutt however, this should
be identical to debian/0011-debian-specific-467432-write_bcc.patch
however, it is NOT.  There is a slight comment difference, and a write
header call difference.

additional information:
http://dev.mutt.org/trac/ticket/3337
http://bugs.debian.org/467432
---
 headers.c | 2 +-
 init.h    | 8 +++-----
 main.c    | 2 +-
 protos.h  | 2 +-
 send.c    | 4 ++--
 sendlib.c | 6 +++---
 6 files changed, 11 insertions(+), 13 deletions(-)

diff -r d5efd0da7718 -r 1e2ed7ef1f77 headers.c
--- a/headers.c	Mon May 30 03:42:21 2016 +0100
+++ b/headers.c	Mon May 30 03:42:37 2016 +0100
@@ -52,7 +52,7 @@ void mutt_edit_headers (const char *edit
   }
   
   mutt_env_to_local (msg->env);
-  mutt_write_rfc822_header (ofp, msg->env, NULL, 1, 0);
+  mutt_write_rfc822_header (ofp, msg->env, NULL, 1, 0, 1);
   fputc ('\n', ofp);	/* tie off the header. */
 
   /* now copy the body of the message. */
diff -r d5efd0da7718 -r 1e2ed7ef1f77 init.h
--- a/init.h	Mon May 30 03:42:21 2016 +0100
+++ b/init.h	Mon May 30 03:42:37 2016 +0100
@@ -4087,11 +4087,9 @@ struct option_t MuttVars[] = {
   { "write_bcc",	DT_BOOL, R_NONE, OPTWRITEBCC, 1},
   /*
   ** .pp
-  ** Controls whether mutt writes out the ``Bcc:'' header when preparing
-  ** messages to be sent.  Exim users may wish to unset this. If mutt
-  ** is set to deliver directly via SMTP (see $$smtp_url), this
-  ** option does nothing: mutt will never write out the ``Bcc:'' header
-  ** in this case.
+  ** Controls whether mutt writes out the Bcc header when saving
+  ** messages to FCC. Bcc headers will never be written to a message
+  ** when sending it.
   */
   { "write_inc",	DT_NUM,	 R_NONE, UL &WriteInc, 10 },
   /*
diff -r d5efd0da7718 -r 1e2ed7ef1f77 main.c
--- a/main.c	Mon May 30 03:42:21 2016 +0100
+++ b/main.c	Mon May 30 03:42:37 2016 +0100
@@ -764,7 +764,7 @@ int main (int argc, char **argv)
           mutt_env_to_intl (msg->env, NULL, NULL);
         }
 
-        mutt_write_rfc822_header (fout, msg->env, msg->content, -1, 0);
+        mutt_write_rfc822_header (fout, msg->env, msg->content, -1, 0, 0);
         if (option (OPTRESUMEEDITEDDRAFTFILES))
           fprintf (fout, "X-Mutt-Resume-Draft: 1\n");
         fputc ('\n', fout);
diff -r d5efd0da7718 -r 1e2ed7ef1f77 protos.h
--- a/protos.h	Mon May 30 03:42:21 2016 +0100
+++ b/protos.h	Mon May 30 03:42:37 2016 +0100
@@ -391,7 +391,7 @@ int mutt_write_multiple_fcc (const char 
 int mutt_write_mime_body (BODY *, FILE *);
 int mutt_write_mime_header (BODY *, FILE *);
 int mutt_write_one_header (FILE *fp, const char *tag, const char *value, const char *pfx, int wraplen, int flags);
-int mutt_write_rfc822_header (FILE *, ENVELOPE *, BODY *, int, int);
+int mutt_write_rfc822_header (FILE *, ENVELOPE *, BODY *, int, int, int);
 void mutt_write_references (LIST *, FILE *, int);
 int mutt_yesorno (const char *, int);
 void mutt_set_header_color(CONTEXT *, HEADER *);
diff -r d5efd0da7718 -r 1e2ed7ef1f77 send.c
--- a/send.c	Mon May 30 03:42:21 2016 +0100
+++ b/send.c	Mon May 30 03:42:37 2016 +0100
@@ -1086,10 +1086,10 @@ static int send_message (HEADER *msg)
     unset_option (OPTWRITEBCC);
 #endif
 #ifdef MIXMASTER
-  mutt_write_rfc822_header (tempfp, msg->env, msg->content, 0, msg->chain ? 1 : 0);
+  mutt_write_rfc822_header (tempfp, msg->env, msg->content, 0, msg->chain ? 1 : 0, 0);
 #endif
 #ifndef MIXMASTER
-  mutt_write_rfc822_header (tempfp, msg->env, msg->content, 0, 0);
+  mutt_write_rfc822_header (tempfp, msg->env, msg->content, 0, 0, 0);
 #endif
 #ifdef USE_SMTP
   if (old_write_bcc)
diff -r d5efd0da7718 -r 1e2ed7ef1f77 sendlib.c
--- a/sendlib.c	Mon May 30 03:42:21 2016 +0100
+++ b/sendlib.c	Mon May 30 03:42:37 2016 +0100
@@ -1953,7 +1953,7 @@ out:
 
 
 int mutt_write_rfc822_header (FILE *fp, ENVELOPE *env, BODY *attach,
-			      int mode, int privacy)
+			      int mode, int privacy, int should_write_bcc)
 {
   char buffer[LONG_STRING];
   char *p, *q;
@@ -2002,7 +2002,7 @@ int mutt_write_rfc822_header (FILE *fp, 
 #endif
     fputs ("Cc: \n", fp);
 
-  if (env->bcc)
+  if (env->bcc && should_write_bcc)
   {
     if(mode != 0 || option(OPTWRITEBCC))
     {
@@ -2850,7 +2850,7 @@ int mutt_write_fcc (const char *path, HE
   /* post == 1 => postpone message. Set mode = -1 in mutt_write_rfc822_header()
    * post == 0 => Normal mode. Set mode = 0 in mutt_write_rfc822_header()
    * */
-  mutt_write_rfc822_header (msg->fp, hdr->env, hdr->content, post ? -post : 0, 0);
+  mutt_write_rfc822_header (msg->fp, hdr->env, hdr->content, post ? -post : 0, 0, 1);
 
   /* (postponment) if this was a reply of some sort, <msgid> contians the
    * Message-ID: of message replied to.  Save it using a special X-Mutt-
